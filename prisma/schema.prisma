generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  passwordHash  String
  name          String?
  createdAt     DateTime  @default(now())
  memberships   Membership[]
}

model Entity {
  id          String        @id @default(cuid())
  name        String
  createdAt   DateTime      @default(now())
  memberships Membership[]
  months      MonthClose[]
}

model Membership {
  id       String   @id @default(cuid())
  userId   String
  entityId String
  role     Role     @default(EMPLOYEE)

  user     User     @relation(fields: [userId], references: [id])
  entity   Entity   @relation(fields: [entityId], references: [id])

  @@unique([userId, entityId])
}

enum Role {
  ADMIN       // owner of entity, can invite/remove, manage billing
  MANAGER     // can see everything, cannot manage users
  EMPLOYEE    // can only see assigned items
}

model MonthClose {
  id        String         @id @default(cuid())
  entityId  String
  label     String
  startDate DateTime
  endDate   DateTime
  createdAt DateTime       @default(now())

  entity    Entity         @relation(fields: [entityId], references: [id])
  checklistItems ChecklistItem[]

  @@unique([entityId, label])
}

model ChecklistItem {
  id        String   @id @default(cuid())
  monthId   String
  title     String
  owner     String?
  assignee  String?
  dueDate   DateTime?
  status    Status   @default(NOT_STARTED)
  notes     String?

  month     MonthClose @relation(fields: [monthId], references: [id])
  tasks     Task[]
}

model Task {
  id              String   @id @default(cuid())
  checklistItemId String
  title           String
  assignee        String?
  dueDate         DateTime?
  status          Status   @default(NOT_STARTED)
  notes           String?

  checklistItem   ChecklistItem @relation(fields: [checklistItemId], references: [id])
}

enum Status {
  NOT_STARTED
  IN_PROGRESS
  DONE
}