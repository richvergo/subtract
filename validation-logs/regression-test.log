Command: npm run test:regression
Timestamp: Tue Sep 23 22:12:46 EDT 2025
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers (1 ms)
      ✓ should handle SSO redirect flow and return to base domain
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains (1 ms)
      ✓ should support dynamic domain expansion
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (9 ms)
      ✓ should throw error when base domain is undefined
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (16 ms)
      ✓ should handle domain scope without configuration (1 ms)
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (2 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.338 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
Command: npm run test:regression
Timestamp: Tue Sep 23 22:17:19 EDT 2025
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations (1 ms)
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers
      ✓ should handle SSO redirect flow and return to base domain
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains
      ✓ should support dynamic domain expansion (1 ms)
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (8 ms)
      ✓ should throw error when base domain is undefined
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (14 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics (1 ms)
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths (1 ms)
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (1 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios (1 ms)
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.256 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
Command: npm run test:regression
Timestamp: Tue Sep 23 22:20:10 EDT 2025
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations (1 ms)
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers (1 ms)
      ✓ should handle SSO redirect flow and return to base domain
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains (1 ms)
      ✓ should support dynamic domain expansion
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (8 ms)
      ✓ should throw error when base domain is undefined
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (15 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully (1 ms)
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths
    Configuration Validation
      ✓ should validate domain scope configuration with Zod (1 ms)
      ✓ should reject invalid configuration
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (2 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios (1 ms)
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.259 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
Command: npm run test:regression
Start Time: Tue Sep 23 22:53:36 EDT 2025
Start Memory: 1824KB
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (7 ms)
      ✓ should maintain recording state across multiple base domain navigations (2 ms)
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers (1 ms)
      ✓ should handle SSO redirect flow and return to base domain (1 ms)
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains (2 ms)
      ✓ should support dynamic domain expansion (1 ms)
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (13 ms)
      ✓ should throw error when base domain is undefined (1 ms)
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (17 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths (1 ms)
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (2 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios (1 ms)
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.507 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
End Time: Tue Sep 23 22:53:37 EDT 2025
End Memory: 1824KB
Duration: 1s
Memory Delta: 0KB
----------------------------------------
Command: npm run test:regression
Start Time: Tue Sep 23 22:53:52 EDT 2025
Start Memory: 1808KB
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains
      ✓ should pause recording when navigating to external domains (1 ms)
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers
      ✓ should handle SSO redirect flow and return to base domain (1 ms)
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains
      ✓ should support dynamic domain expansion
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (8 ms)
      ✓ should throw error when base domain is undefined
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (15 ms)
      ✓ should handle domain scope without configuration (1 ms)
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully (1 ms)
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (2 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.252 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
End Time: Tue Sep 23 22:53:53 EDT 2025
End Memory: 1824KB
Duration: 1s
Memory Delta: 16KB
----------------------------------------
Command: npm run test:regression
Start Time: Tue Sep 23 23:01:25 EDT 2025
Start Memory: 1808KB
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations (1 ms)
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers (1 ms)
      ✓ should handle SSO redirect flow and return to base domain
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains
      ✓ should support dynamic domain expansion (1 ms)
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (8 ms)
      ✓ should throw error when base domain is undefined
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (15 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully (1 ms)
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (1 ms)
      ✓ should clear history efficiently (1 ms)
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.265 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
End Time: Tue Sep 23 23:01:25 EDT 2025
End Memory: 1824KB
Duration: 0s
Memory Delta: 16KB
----------------------------------------
Command: npm run test:regression
Start Time: Tue Sep 23 23:02:09 EDT 2025
Start Memory: 1808KB
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations (1 ms)
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers
      ✓ should handle SSO redirect flow and return to base domain (1 ms)
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains
      ✓ should support dynamic domain expansion
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (8 ms)
      ✓ should throw error when base domain is undefined
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (14 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully (1 ms)
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (2 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios
      ✓ should validate allowedDomains metadata before test run (1 ms)

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.26 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
End Time: Tue Sep 23 23:02:09 EDT 2025
End Memory: 1840KB
Duration: 0s
Memory Delta: 32KB
----------------------------------------
Command: npm run test:regression
Start Time: Tue Sep 23 23:02:14 EDT 2025
Start Memory: 1824KB
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:95:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:104:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (2 ms)
      ✓ should maintain recording state across multiple base domain navigations
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains (1 ms)
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers
      ✓ should handle SSO redirect flow and return to base domain (1 ms)
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains
      ✓ should support dynamic domain expansion (1 ms)
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (8 ms)
      ✓ should throw error when base domain is undefined (1 ms)
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (14 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics (1 ms)
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths
    Configuration Validation
      ✓ should validate domain scope configuration with Zod (1 ms)
      ✓ should reject invalid configuration
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (2 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios (1 ms)
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.263 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
End Time: Tue Sep 23 23:02:15 EDT 2025
End Memory: 1824KB
Duration: 1s
Memory Delta: 0KB
----------------------------------------
Command: npm run test:regression
Start Time: Tue Sep 23 23:07:57 EDT 2025
Start Memory: 1824KB
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:110:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:119:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations (1 ms)
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers (1 ms)
      ✓ should handle SSO redirect flow and return to base domain
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains (1 ms)
      ✓ should support dynamic domain expansion
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (9 ms)
      ✓ should throw error when base domain is undefined (1 ms)
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (16 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics (1 ms)
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully
      ✓ should handle case insensitive domains
      ✓ should handle URLs with ports and paths (1 ms)
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (1 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.268 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
End Time: Tue Sep 23 23:07:58 EDT 2025
End Memory: 1856KB
Duration: 1s
Memory Delta: 32KB
----------------------------------------
Command: npm run test:regression
Start Time: Tue Sep 23 23:08:11 EDT 2025
Start Memory: 1808KB
----------------------------------------

> vergo-automation-platform@0.3.0 test:regression
> jest tests/agents/capture/DomainScopeRegression.test.ts --runInBand

  console.log
    🌐 Domain scope initialized: getvergo.com

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:110:15)

  console.log
    🎬 PuppeteerCaptureService initialized

      at PuppeteerCaptureService.initialize (src/lib/agents/capture/PuppeteerCaptureService.ts:119:13)

PASS node tests/agents/capture/DomainScopeRegression.test.ts
  Domain Scope Regression Tests
    Within Base Domain Navigation
      ✓ should record actions within base domain (apply.getvergo.com) (3 ms)
      ✓ should maintain recording state across multiple base domain navigations
    Outside Domain Navigation
      ✓ should ignore actions and fire banner event for external domains (1 ms)
      ✓ should pause recording when navigating to external domains
    SSO Redirect Handling
      ✓ should record login form interactions on SSO providers
      ✓ should handle SSO redirect flow and return to base domain (1 ms)
    Allowed Domain Expansion
      ✓ should allow navigation to explicitly allowed domains
      ✓ should support dynamic domain expansion (1 ms)
    Missing Base Domain Error Handling
      ✓ should throw error when base domain is missing (7 ms)
      ✓ should throw error when base domain is undefined (1 ms)
    Domain Scope Integration with PuppeteerCaptureService
      ✓ should initialize domain scope in capture service (15 ms)
      ✓ should handle domain scope without configuration
    Navigation History and Statistics
      ✓ should track navigation history correctly
      ✓ should provide accurate domain statistics
    Edge Cases and Error Handling
      ✓ should handle malformed URLs gracefully
      ✓ should handle case insensitive domains (1 ms)
      ✓ should handle URLs with ports and paths
    Configuration Validation
      ✓ should validate domain scope configuration with Zod
      ✓ should reject invalid configuration (1 ms)
    Performance and Memory Management
      ✓ should handle large navigation histories efficiently (2 ms)
      ✓ should clear history efficiently
    Security and Data Protection
      ✓ should not log sensitive data in test scenarios (1 ms)
      ✓ should validate allowedDomains metadata before test run

Test Suites: 1 passed, 1 total
Tests:       23 passed, 23 total
Snapshots:   0 total
Time:        0.263 s, estimated 1 s
Ran all test suites matching tests/agents/capture/DomainScopeRegression.test.ts.
End Time: Tue Sep 23 23:08:11 EDT 2025
End Memory: 1808KB
Duration: 0s
Memory Delta: 0KB
----------------------------------------
