name: Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: TypeScript type check
      run: npm run type-check
      
    - name: ESLint check
      run: npm run lint
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Check for schema mismatches
      run: |
        echo "Checking for snake_case database field usage..."
        if grep -r "agent_config\|purpose_prompt\|agent_intents" tests/ src/ --include="*.ts" --include="*.tsx"; then
          echo "❌ Found snake_case database fields! Use camelCase instead."
          echo "Run: find . -name '*.ts' -o -name '*.tsx' | xargs sed -i '' 's/agent_config/agentConfig/g'"
          exit 1
        else
          echo "✅ No snake_case database fields found"
        fi
        
    - name: Check for any types
      run: |
        echo "Checking for 'any' type usage..."
        if grep -r ": any" src/ --include="*.ts" --include="*.tsx" --exclude-dir=node_modules; then
          echo "❌ Found 'any' types! Use proper types instead."
          echo "Replace 'any' with 'unknown' or specific interfaces"
          exit 1
        else
          echo "✅ No 'any' types found"
        fi
        
    - name: Check for unescaped JSX entities
      run: |
        echo "Checking for unescaped JSX entities..."
        if grep -r "Don't\|can't\|won't\|" src/ --include="*.tsx" --exclude-dir=node_modules; then
          echo "❌ Found unescaped JSX entities! Use &apos; instead of '"
          echo "Example: Don't → Don&apos;t"
          exit 1
        else
          echo "✅ No unescaped JSX entities found"
        fi
        
    - name: Build check
      run: npm run build
      
    - name: Test build output
      run: |
        if [ -d ".next" ]; then
          echo "✅ Build successful - .next directory created"
        else
          echo "❌ Build failed - .next directory not found"
          exit 1
        fi
